/*Obtener un listado de autores agrupados por nacionalidades y ordenados por su primer y segundo apellido*/
#include <stdio.h>
#include <sqlca.h>

int main(){
	exec sql begin declare section;
	char nombre[51], apellido[51],nom_nac[21];
	int cod_nac,ano_nac,contador;
	char oracleid[]="/";
	exec sql end declare section;

	exec sql declare micursor cursor for
	select nac.nombre,nac.codigo,nombre,apellido,ano_nac, cod_nacion from autor, nacionalidad nac where cod_nacion=nac.codigo;

	int nacionact=0;

	exec sql connect :oracleid;

	exec sql open micursor;

	exec sql fetch micursor into :cod_nac, :nom_nac, :nombre, :apellidos, :ano_nac;

	while(sqlca.sqlcode == 0){
		if(cod_nac != nacionact){
			printf("NACIONALIDAD:\t %s\n\n",nom_nac);
			nacionact = cod_nac;
		
			exec sql select count(*) into :contador from autor where cod_nacion=:cod_nac;
			if(sqlca.sqlcode != 0 && sqlca.sqlcode != 100){
				printf ("SELECT: %d, %s", sqlca.sqlcode, sqlca.sqlerrm.sqlerrmc);
			}
			printf ("AUTORES:\t %d\n\n", contador);
			printf ("%-20s %-20s %s\n", "APELLIDOS", "NOMBRE", "ANO NACIMIENTO");
		}
		printf ("%-20s %-20s %d\n", nombre, apellidos, ano_nac);
		exec sql fetch micursor into :cod_nac, :nom_nac, :nombre, :apellidos, :ano_nac;
		if (sqlca.sqlcode!=0 && sqlca.sqlcode!=100) 
			printf ("FETCH 2: %d, %s", sqlca.sqlcode, sqlca.sqlerrm.sqlerrmc);
	}

	exec sql close micursir;
	exec sql commit work release;
	return 0;
}
